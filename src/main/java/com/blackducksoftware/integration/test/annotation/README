These annotations are used to exclude specific classes or methods from your gradle test task.
To skip a class or method, add one of these predefined interfaces as a category annotation like the following

@Category(IntegrationTest.class)

In the case that custom annotations are wanted or required, you will need to add your new test interfaces and create the corresponding gradle tasks.
Here is an example of adding multiple tasks to be used for testing specific tests.

def testTasksAndPackages = [
    'testIntegration' : 'com.blackducksoftware.integration.test.annotation.IntegrationTest',
    'testDatabaseConnection' : 'com.blackducksoftware.integration.test.annotation.DatabaseConnectionTest',
    'testExternalConnection' : 'com.blackducksoftware.integration.test.annotation.ExternalConnectionTest',
    'testHubConnection' : 'com.blackducksoftware.integration.test.annotation.HubConnectionTest',
    'testPerformance' : 'com.blackducksoftware.integration.test.annotation.PerformanceTest'
]
    
test {
    useJUnit {
        excludeCategories = testTasksAndPackages.values()
    }
}

testTasksAndPackages.each { taskName, packageName ->
    task "$taskName"(type: Test) {
        useJUnit { includeCategories packageName }
    }
}

What this does is use a user defined list of task names and their associated interface package and creates tasks.
Classes and methods annotated with your new interfaces will now be skipped unless you run them using the task name you specified.